{"ast":null,"code":"var _jsxFileName = \"/Users/bbigemoloserr/Documents/counter-app/src/components/counters.jsx\";\nimport React, { Component } from 'react';\nimport Counter from './counter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Counters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 4\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }]\n    };\n\n    this.handleIncrement = counter => {\n      const counters = [...this.state.counters];\n      const index = counters.indexOf(counter);\n      counters[index] = { ...counter\n      };\n      counters[index].value++;\n      this.setState(counters);\n    };\n\n    this.handleDelete = counterId => {\n      const counters = this.state.counters.filter(c => c.id !== counterId);\n      this.setState({\n        counters\n      }); /// the new constant will overide the properties of the array \n      ///{} r used to pass an object  \n    };\n\n    this.handleReset = () => {\n      const counters = this.state.counters.filter(c => c.value === 0);\n      this.setState({\n        counters\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleReset,\n        className: \"btn btn-primary btn-sm m-2\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), this.state.counters.map(counter => /*#__PURE__*/_jsxDEV(Counter, {\n        // value={counter.value} \n        // id={counter.id}\n        onDelete: this.handleDelete,\n        onIncrement: this.handleIncrement ///The counter object carries all the data of the object so owe can omit its props like value, if, onDelete \n        ,\n        counter: counter\n      }, counter.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  } ///<Counter key={counter.id} value={counter.value} /> giải thích: counter.value ở đây là access vào value của counters và lấy cái value attribute từ counters (array) của state (object) pass vào cái counter component.\n  ///Which biến nó thành 1 prop của counter => nếu muốn access nó ở bên counter.jsx thì phải ghi là this.props.value còn access đến nó trong trang chính chủ là counters (vì nó là local data của counters state) thì phải ghi là this.state.counters[số] vì là array\n  ///vi du: key={counter.id} thì key là 1 props còn {counter.id} là value giống như hồi học Python k:v\n  ///value={counter.value} sau đó ta dăt tên cho nó là value, value này dc gọi là attribute của this.props của counter khi console.log co thể thấy hoặc dc goi la props của counter.\n  ///onDelete={this.handleDelete} onDelet này cunng la 1 prop act as a function\n\n\n}","map":{"version":3,"sources":["/Users/bbigemoloserr/Documents/counter-app/src/components/counters.jsx"],"names":["React","Component","Counter","Counters","state","counters","id","value","handleIncrement","counter","index","indexOf","setState","handleDelete","counterId","filter","c","handleReset","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC5CG,KAD4C,GACpC;AACJC,MAAAA,QAAQ,EAAE,CACN;AAACC,QAAAA,EAAE,EAAC,CAAJ;AAAOC,QAAAA,KAAK,EAAE;AAAd,OADM,EAEN;AAACD,QAAAA,EAAE,EAAC,CAAJ;AAAOC,QAAAA,KAAK,EAAE;AAAd,OAFM,EAGN;AAACD,QAAAA,EAAE,EAAC,CAAJ;AAAOC,QAAAA,KAAK,EAAE;AAAd,OAHM,EAIN;AAACD,QAAAA,EAAE,EAAC,CAAJ;AAAOC,QAAAA,KAAK,EAAE;AAAd,OAJM;AADN,KADoC;;AAAA,SAe5CC,eAf4C,GAe3BC,OAAO,IAAI;AACxB,YAAMJ,QAAQ,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf,CAAjB;AACA,YAAMK,KAAK,GAAGL,QAAQ,CAACM,OAAT,CAAiBF,OAAjB,CAAd;AACAJ,MAAAA,QAAQ,CAACK,KAAD,CAAR,GAAiB,EAAE,GAAGD;AAAL,OAAjB;AACAJ,MAAAA,QAAQ,CAACK,KAAD,CAAR,CAAgBH,KAAhB;AACA,WAAKK,QAAL,CAAcP,QAAd;AAEH,KAtB2C;;AAAA,SAwB3CQ,YAxB2C,GAwB5BC,SAAS,IAAI;AACzB,YAAMT,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBU,MAApB,CAA2BC,CAAC,IAAIA,CAAC,CAACV,EAAF,KAASQ,SAAzC,CAAjB;AACA,WAAKF,QAAL,CAAc;AAACP,QAAAA;AAAD,OAAd,EAFyB,CAG7B;AACA;AACC,KA7B2C;;AAAA,SA+B5CY,WA/B4C,GA+B9B,MAAM;AAChB,YAAMZ,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBU,MAApB,CAA2BC,CAAC,IAAIA,CAAC,CAACT,KAAF,KAAY,CAA5C,CAAjB;AACA,WAAKK,QAAL,CAAc;AAACP,QAAAA;AAAD,OAAd;AACH,KAlC2C;AAAA;;AAmC5Ca,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACA;AAAQ,QAAA,OAAO,EAAE,KAAKD,WAAtB;AAAmC,QAAA,SAAS,EAAC,4BAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAEC,KAAKb,KAAL,CAAWC,QAAX,CAAoBc,GAApB,CAAwBV,OAAO,iBAChC,QAAC,OAAD;AAEA;AACA;AACA,QAAA,QAAQ,EAAE,KAAKI,YAJf;AAKA,QAAA,WAAW,EAAE,KAAKL,eALlB,CAMZ;AANY;AAOA,QAAA,OAAO,EAAEC;AAPT,SACKA,OAAO,CAACH,EADb;AAAA;AAAA;AAAA;AAAA,cADC,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH,GAnD2C,CAqD3C;AACA;AACA;AACA;AACA;;;AAzD2C","sourcesContent":["import React, { Component } from 'react'\nimport Counter from './counter';\n\nexport default class Counters extends Component {\n    state = {  \n        counters: [\n            {id:1, value: 4},\n            {id:2, value: 0},\n            {id:3, value: 0},\n            {id:4, value: 0}\n        ]\n    }\n     ///State là nơi lưu trữ data rieng của component đó mà các components khác ko access hay edit vào dc/ local data store của component đó\n    //  handleIncrement =() => {\n    //     this.setState({value: this.state.counter.value +1})\n    // }\n    ///value đã có sẵn nên ko cần initialize \n    ///Cái trên là cái ban đầu cònw bây giờ ta initialize cái method handleIncrement này ở trong Counters và raise nó bên Counter thì phải pass vào method này vào cái counter component bên kia như 1 prop} nên bây giờ cái code của nó (dành để update local state của counter) ko su dung dc ben day nên phai ghi the này:\n    handleIncrement= counter => {\n        const counters = [...this.state.counters]\n        const index = counters.indexOf(counter)\n        counters[index] ={ ...counter}\n        counters[index].value++;\n        this.setState(counters)\n\n    }\n\n     handleDelete = counterId => {\n        const counters = this.state.counters.filter(c => c.id !== counterId)\n        this.setState({counters})\n    /// the new constant will overide the properties of the array \n    ///{} r used to pass an object  \n    }\n    ///handleDelete này là 1 method hoac con dc goi la  event handler\n    handleReset = () => {\n        const counters = this.state.counters.filter(c => c.value === 0)\n        this.setState({counters})\n    } \n    render() { \n        return (\n            <div>\n            <button onClick={this.handleReset} className=\"btn btn-primary btn-sm m-2\">Reset</button>\n            {this.state.counters.map(counter => \n            <Counter \n            key={counter.id} \n            // value={counter.value} \n            // id={counter.id}\n            onDelete={this.handleDelete}\n            onIncrement={this.handleIncrement}\n///The counter object carries all the data of the object so owe can omit its props like value, if, onDelete \n            counter={counter}\n            />)} \n            </div>\n         );\n    }\n\n     ///<Counter key={counter.id} value={counter.value} /> giải thích: counter.value ở đây là access vào value của counters và lấy cái value attribute từ counters (array) của state (object) pass vào cái counter component.\n     ///Which biến nó thành 1 prop của counter => nếu muốn access nó ở bên counter.jsx thì phải ghi là this.props.value còn access đến nó trong trang chính chủ là counters (vì nó là local data của counters state) thì phải ghi là this.state.counters[số] vì là array\n     ///vi du: key={counter.id} thì key là 1 props còn {counter.id} là value giống như hồi học Python k:v\n     ///value={counter.value} sau đó ta dăt tên cho nó là value, value này dc gọi là attribute của this.props của counter khi console.log co thể thấy hoặc dc goi la props của counter.\n     ///onDelete={this.handleDelete} onDelet này cunng la 1 prop act as a function\n}\n"]},"metadata":{},"sourceType":"module"}