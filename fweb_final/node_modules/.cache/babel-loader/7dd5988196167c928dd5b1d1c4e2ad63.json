{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nexport default function ParkingList() {\n  _s();\n\n  const [currentTime, setCurrentTime] = useState(0);\n  const [availableParkingCarType, setAvailableParkingCarType] = useState([]);\n  let availableParkingId = [],\n      availableParkingCarTypeVar = [];\n  let fetched = [];\n  const [parkingList, setParkingList] = useState([]);\n  const endPoint = \"https://api.data.gov.hk/v1/carpark-info-vacancy\";\n\n  const load = () => {\n    const parkingListVar = [];\n    fetch(endPoint + \"?data=vacancy\").then(response => response.json()).then(fetchedResult => {\n      fetched = fetchedResult.results;\n      fetched.map(parking => {\n        let carType = [];\n\n        if (parking.privateCar !== undefined && parking.privateCar[0].vacancy > 0) {\n          carType.push(\"Private Car, \");\n        }\n\n        if (parking.LGV !== undefined && parking.LGV[0].vacancy > 0) {\n          carType.push(\"Light Goods Vehicle, \");\n        }\n\n        if (parking.HGV !== undefined && parking.HGV[0].vacancy > 0) {\n          carType.push(\"Heavy Goods Vehicle, \");\n        }\n\n        if (parking.CV !== undefined && parking.CV[0].vacancy > 0) {\n          carType.push(\"Container Vehicle, \");\n        }\n\n        if (parking.coach !== undefined && parking.coach[0].vacancy > 0) {\n          carType.push(\"Coach, \");\n        }\n\n        if (parking.motorCycle !== undefined && parking.motorCycle[0].vacancy > 0) {\n          carType.push(\"Motor Cycle, \");\n        }\n\n        if (carType.length > 0) {\n          availableParkingId.push(parking.park_Id);\n          availableParkingCarTypeVar.push(carType);\n        }\n      });\n      console.log(carType);\n      fetch(endPoint).then(response => response.json()).then(fetchedResult => {\n        fetchedResult.results.filter(parking => {\n          availableParkingId.includes(parking.park_Id) && parkingListVar.push(parking);\n          setAvailableParkingCarType(availableParkingCarType => availableParkingCarTypeVar);\n        });\n        setParkingList(parkingListVar);\n      });\n    });\n  };\n}\n\n_s(ParkingList, \"h3276ugOdpmR1Kc0UTcavbdyVZE=\");\n\n_c = ParkingList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParkingList\");","map":{"version":3,"sources":["/Users/bbigemoloserr/Documents/counter-app/src/components/data.jsx"],"names":["useEffect","useState","ParkingList","currentTime","setCurrentTime","availableParkingCarType","setAvailableParkingCarType","availableParkingId","availableParkingCarTypeVar","fetched","parkingList","setParkingList","endPoint","load","parkingListVar","fetch","then","response","json","fetchedResult","results","map","parking","carType","privateCar","undefined","vacancy","push","LGV","HGV","CV","coach","motorCycle","length","park_Id","console","log","filter","includes"],"mappings":"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","sourcesContent":["\nimport { useEffect, useState } from \"react\"\n\nexport default function ParkingList() {\n    const [currentTime, setCurrentTime] = useState(0)\n    const [availableParkingCarType, setAvailableParkingCarType] = useState([])\n    let availableParkingId = [], availableParkingCarTypeVar = []\n    let fetched = []\n    const [parkingList, setParkingList] = useState([])\n    const endPoint = \"https://api.data.gov.hk/v1/carpark-info-vacancy\"\n    const load = () => {\n        const parkingListVar = []\n        fetch(endPoint + \"?data=vacancy\")\n            .then(response => response.json())\n            .then(fetchedResult => {\n                fetched = fetchedResult.results;\n                fetched.map((parking => {\n                    let carType = []\n                    if (parking.privateCar !== undefined && parking.privateCar[0].vacancy > 0) {\n                        carType.push(\"Private Car, \")\n                    }\n                    if (parking.LGV !== undefined && parking.LGV[0].vacancy > 0) {\n                        carType.push(\"Light Goods Vehicle, \")\n                    }\n                    if (parking.HGV !== undefined && parking.HGV[0].vacancy > 0) {\n                        carType.push(\"Heavy Goods Vehicle, \")\n                    }\n                    if (parking.CV !== undefined && parking.CV[0].vacancy > 0) {\n                        carType.push(\"Container Vehicle, \")\n                    }\n                    if (parking.coach !== undefined && parking.coach[0].vacancy > 0) {\n                        carType.push(\"Coach, \")\n                    }\n                    if (parking.motorCycle !== undefined && parking.motorCycle[0].vacancy > 0) {\n                        carType.push(\"Motor Cycle, \")\n                    }\n                    if (carType.length > 0) {\n                        availableParkingId.push(parking.park_Id);\n                        availableParkingCarTypeVar.push(carType)\n                    }\n                }))\n                console.log(carType)\n                fetch(endPoint)\n                    .then(response => response.json())\n                    .then(fetchedResult => {fetchedResult.results.filter((parking) => {\n                        availableParkingId.includes(parking.park_Id) && parkingListVar.push(parking);\n                        setAvailableParkingCarType(availableParkingCarType => availableParkingCarTypeVar)\n        \n                    })\n                    setParkingList(parkingListVar)\n                })\n            })\n    }\n}"]},"metadata":{},"sourceType":"module"}