{"ast":null,"code":"var _jsxFileName = \"/Users/bbigemoloserr/Documents/counter-app/src/App.js\",\n    _s = $RefreshSig$();\n\n//Fetch for all car types and all price types\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ParkingList() {\n  _s();\n\n  const [currentTime, setCurrentTime] = useState(0);\n  const [availableParkingCarType, setAvailableParkingCarType] = useState([]);\n  let availableParkingId = [],\n      availableParkingCarTypeVar = [];\n  let fetched = [];\n  const [parkingList, setParkingList] = useState([]);\n  const endPoint = \"https://api.data.gov.hk/v1/carpark-info-vacancy\";\n\n  const load = () => {\n    const parkingListVar = [];\n    fetch(endPoint).then(response => response.json()).then(fetchedResult => {\n      fetched = fetchedResult.results;\n      fetched.map(parking => {\n        let carType = [];\n\n        if (parking.privateCar !== undefined && parking.privateCar[0] > 0) {\n          carType.push(\"Private Car, \");\n        }\n\n        if (parking.LGV !== undefined && parking.LGV[0].vacancy > 0) {\n          carType.push(\"Light Goods Vehicle, \");\n        }\n\n        if (parking.HGV !== undefined && parking.HGV[0].vacancy > 0) {\n          carType.push(\"Heavy Goods Vehicle, \");\n        }\n\n        if (parking.CV !== undefined && parking.CV[0].vacancy > 0) {\n          carType.push(\"Container Vehicle, \");\n        }\n\n        if (parking.coach !== undefined && parking.coach[0].vacancy > 0) {\n          carType.push(\"Coach, \");\n        }\n\n        if (parking.motorCycle !== undefined && parking.motorCycle[0].vacancy > 0) {\n          carType.push(\"Motor Cycle, \");\n        }\n\n        if (carType.length > 0) {\n          availableParkingId.push(parking.park_Id);\n          availableParkingCarTypeVar.push(carType);\n        }\n      });\n      console.log(availableParkingCarTypeVar);\n      fetch(endPoint).then(response => response.json()).then(fetchedResult => {\n        fetchedResult.results.filter(parking => {\n          availableParkingId.includes(parking.park_Id) && parkingListVar.push(parking);\n          setAvailableParkingCarType(availableParkingCarType => availableParkingCarTypeVar);\n        });\n        setParkingList(parkingListVar);\n      });\n    });\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => setCurrentTime(currentTime => currentTime + 1), 30000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    load();\n  }, [currentTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `table, th, td {border: 1px solid black; border-collapse: collapse;}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Place\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Available For\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: parkingList.map((parking, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: parking.park_Id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: parking.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: parking.displayAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: parking.openingHours !== undefined ? `Days: ${parking.openingHours[0].weekdays.join(\",\")} | Period Start: ${parking.openingHours[0].periodStart} | Period End: ${parking.openingHours[0].periodEnd} | Exclude Public Holiday: ${parking.openingHours[0].excludePublicHoliday ? \"Yes\" : \"No\"}` : \"Not specified\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Private Car Hourly Charge: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this), parking.privateCar !== undefined && parking.privateCar.hourlyCharges !== undefined ? parking.privateCar.hourlyCharges.map((item, index1) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 117\n              }, this), \"Days: \", item.weekdays.join(\",\"), \"| Exclude Public Holiday: \", item.excludePublicHoliday ? \"Yes\" : \"No\", \" | Remark: \", item.remark, \" | Covered: \", item.covered, \" | Type: \", item.type, \" | Price: \", item.price, \" | Usage Minimum: \", item.usageMinimum, \" | Period Start: \", item.periodStart, \" | Period End: \", item.periodEnd]\n            }, index1, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 97\n            }, this)) : \"Not specified\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Private Car Monthly Charge: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 43\n            }, this), parking.privateCar !== undefined && parking.privateCar.monthlyCharges !== undefined ? parking.privateCar.monthlyCharges.map((item, index2) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 203\n              }, this), \"Reserved: \", item.reserved, \" | Covered: \", item.covered, \" | Type: \", item.type, \" | Price: \", item.price, \" \"]\n            }, index2, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 183\n            }, this)) : \"Not specified\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Private Car Day Night Charge: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 43\n            }, this), parking.privateCar !== undefined && parking.privateCar.dayNightParks !== undefined ? parking.privateCar.dayNightParks.map((item, index3) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 201\n              }, this), \"Days: \", item.weekdays.join(\",\"), \"| Exclude Public Holiday: \", item.excludePublicHoliday ? \"Yes\" : \"No\", \" | Remark: \", item.remark, \" | Covered: \", item.covered, \" | Type: \", item.type, \" | Price: \", item.price, \" | Valid Until: \", item.validUntil, \" | Period Start: \", item.periodStart, \" | Period End: \", item.periodEnd]\n            }, index3, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 181\n            }, this)) : \"Not specified\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Light Goods Vehicle Hourly Charge: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 42\n            }, this), parking.LGV !== undefined && parking.LGV.hourlyCharges !== undefined ? parking.LGV.hourlyCharges.map((item, index1) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 110\n              }, this), \"Days: \", item.weekdays.join(\",\"), \"| Exclude Public Holiday: \", item.excludePublicHoliday ? \"Yes\" : \"No\", \" | Remark: \", item.remark, \" | Covered: \", item.covered, \" | Type: \", item.type, \" | Price: \", item.price, \" | Usage Minimum: \", item.usageMinimum, \" | Period Start: \", item.periodStart, \" | Period End: \", item.periodEnd]\n            }, index1, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 90\n            }, this)) : \"Not specified\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Light Goods Vehicle Monthly Charge: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 43\n            }, this), parking.LGV !== undefined && parking.LGV.monthlyCharges !== undefined ? parking.LGV.monthlyCharges.map((item, index2) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 107\n              }, this), \"Reserved: \", item.reserved, \" | Covered: \", item.covered, \" | Type: \", item.type, \" | Price: \", item.price, \" \"]\n            }, index2, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 87\n            }, this)) : \"Not specified\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Light Goods Vehicle Day Night Charge: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 43\n            }, this), parking.LGV !== undefined && parking.LGV.dayNightParks !== undefined ? parking.LGV.dayNightParks.map((item, index3) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 106\n              }, this), \"Days: \", item.weekdays.join(\",\"), \"| Exclude Public Holiday: \", item.excludePublicHoliday ? \"Yes\" : \"No\", \" | Remark: \", item.remark, \" | Covered: \", item.covered, \" | Type: \", item.type, \" | Price: \", item.price, \" | Valid Until: \", item.validUntil, \" | Period Start: \", item.periodStart, \" | Period End: \", item.periodEnd]\n            }, index3, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 86\n            }, this)) : \"Not specified\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Heavy Goods Vehicle Hourly Charge: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 38\n            }, this), parking.HGV !== undefined && parking.HGV.hourlyCharges !== undefined ? parking.HGV.hourlyCharges.map((item, index1) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 110\n              }, this), \"Days: \", item.weekdays.join(\",\"), \"| Exclude Public Holiday: \", item.excludePublicHoliday ? \"Yes\" : \"No\", \" | Remark: \", item.remark, \" | Covered: \", item.covered, \" | Type: \", item.type, \" | Price: \", item.price, \" | Usage Minimum: \", item.usageMinimum, \" | Period Start: \", item.periodStart, \" | Period End: \", item.periodEnd]\n            }, index1, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 90\n            }, this)) : \"Not specified\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Heavy Goods Vehicle Monthly Charge: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 43\n            }, this), parking.HGV !== undefined && parking.HGV.monthlyCharges !== undefined ? parking.HGV.monthlyCharges.map((item, index2) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 107\n              }, this), \"Reserved: \", item.reserved, \" | Covered: \", item.covered, \" | Type: \", item.type, \" | Price: \", item.price, \" \"]\n            }, index2, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 87\n            }, this)) : \"Not specified\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Heavy Goods Vehicle Day Night Charge: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 43\n            }, this), parking.HGV !== undefined && parking.HGV.dayNightParks !== undefined ? parking.HGV.dayNightParks.map((item, index3) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 106\n              }, this), \"Days: \", item.weekdays.join(\",\"), \"| Exclude Public Holiday: \", item.excludePublicHoliday ? \"Yes\" : \"No\", \" | Remark: \", item.remark, \" | Covered: \", item.covered, \" | Type: \", item.type, \" | Price: \", item.price, \" | Valid Until: \", item.validUntil, \" | Period Start: \", item.periodStart, \" | Period End: \", item.periodEnd]\n            }, index3, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 86\n            }, this)) : \"Not specified\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Container Vehicle Hourly Charge: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 38\n            }, this), parking.CV !== undefined && parking.CV.hourlyCharges !== undefined ? parking.CV.hourlyCharges.map((item, index1) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 109\n              }, this), \"Days: \", item.weekdays.join(\",\"), \"| Exclude Public Holiday: \", item.excludePublicHoliday ? \"Yes\" : \"No\", \" | Remark: \", item.remark, \" | Covered: \", item.covered, \" | Type: \", item.type, \" | Price: \", item.price, \" | Usage Minimum: \", item.usageMinimum, \" | Period Start: \", item.periodStart, \" | Period End: \", item.periodEnd]\n            }, index1, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 89\n            }, this)) : \"Not specified\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Container Vehicle Monthly Charge: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 43\n            }, this), parking.CV !== undefined && parking.CV.monthlyCharges !== undefined ? parking.CV.monthlyCharges.map((item, index2) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 106\n              }, this), \"Reserved: \", item.reserved, \" | Covered: \", item.covered, \" | Type: \", item.type, \" | Price: \", item.price, \" \"]\n            }, index2, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 86\n            }, this)) : \"Not specified\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Container Vehicle Day Night Charge: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 43\n            }, this), parking.CV !== undefined && parking.CV.dayNightParks !== undefined ? parking.CV.dayNightParks.map((item, index3) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 105\n              }, this), \"Days: \", item.weekdays.join(\",\"), \"| Exclude Public Holiday: \", item.excludePublicHoliday ? \"Yes\" : \"No\", \" | Remark: \", item.remark, \" | Covered: \", item.covered, \" | Type: \", item.type, \" | Price: \", item.price, \" | Valid Until: \", item.validUntil, \" | Period Start: \", item.periodStart, \" | Period End: \", item.periodEnd]\n            }, index3, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 85\n            }, this)) : \"Not specified\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Coach Hourly Charge: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 38\n            }, this), parking.coach !== undefined && parking.coach.hourlyCharges !== undefined ? parking.coach.hourlyCharges.map((item, index1) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 112\n              }, this), \"Days: \", item.weekdays.join(\",\"), \"| Exclude Public Holiday: \", item.excludePublicHoliday ? \"Yes\" : \"No\", \" | Remark: \", item.remark, \" | Covered: \", item.covered, \" | Type: \", item.type, \" | Price: \", item.price, \" | Usage Minimum: \", item.usageMinimum, \" | Period Start: \", item.periodStart, \" | Period End: \", item.periodEnd]\n            }, index1, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 92\n            }, this)) : \"Not specified\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Coach Monthly Charge: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 43\n            }, this), parking.coach !== undefined && parking.coach.monthlyCharges !== undefined ? parking.coach.monthlyCharges.map((item, index2) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 109\n              }, this), \"Reserved: \", item.reserved, \" | Covered: \", item.covered, \" | Type: \", item.type, \" | Price: \", item.price, \" \"]\n            }, index2, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 89\n            }, this)) : \"Not specified\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Coach Day Night Charge: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 43\n            }, this), parking.coach !== undefined && parking.coach.dayNightParks !== undefined ? parking.coach.dayNightParks.map((item, index3) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 108\n              }, this), \"Days: \", item.weekdays.join(\",\"), \"| Exclude Public Holiday: \", item.excludePublicHoliday ? \"Yes\" : \"No\", \" | Remark: \", item.remark, \" | Covered: \", item.covered, \" | Type: \", item.type, \" | Price: \", item.price, \" | Valid Until: \", item.validUntil, \" | Period Start: \", item.periodStart, \" | Period End: \", item.periodEnd]\n            }, index3, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 88\n            }, this)) : \"Not specified\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Motor Cycle Hourly Charge: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 38\n            }, this), parking.motorCycle !== undefined && parking.motorCycle.hourlyCharges !== undefined ? parking.motorCycle.hourlyCharges.map((item, index1) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 117\n              }, this), \"Days: \", item.weekdays.join(\",\"), \"| Exclude Public Holiday: \", item.excludePublicHoliday ? \"Yes\" : \"No\", \" | Remark: \", item.remark, \" | Covered: \", item.covered, \" | Type: \", item.type, \" | Price: \", item.price, \" | Usage Minimum: \", item.usageMinimum, \" | Period Start: \", item.periodStart, \" | Period End: \", item.periodEnd]\n            }, index1, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 97\n            }, this)) : \"Not specified\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Motor Cycle Monthly Charge: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 43\n            }, this), parking.motorCycle !== undefined && parking.motorCycle.monthlyCharges !== undefined ? parking.motorCycle.monthlyCharges.map((item, index2) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 114\n              }, this), \"Reserved: \", item.reserved, \" | Covered: \", item.covered, \" | Type: \", item.type, \" | Price: \", item.price, \" \"]\n            }, index2, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 94\n            }, this)) : \"Not specified\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Motor Cycle Day Night Charge: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 43\n            }, this), parking.motorCycle !== undefined && parking.motorCycle.dayNightParks !== undefined ? parking.motorCycle.dayNightParks.map((item, index3) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 113\n              }, this), \"Days: \", item.weekdays.join(\",\"), \"| Exclude Public Holiday: \", item.excludePublicHoliday ? \"Yes\" : \"No\", \" | Remark: \", item.remark, \" | Covered: \", item.covered, \" | Type: \", item.type, \" | Price: \", item.price, \" | Valid Until: \", item.validUntil, \" | Period Start: \", item.periodStart, \" | Period End: \", item.periodEnd]\n            }, index3, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 93\n            }, this)) : \"Not specified\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: availableParkingCarType[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ParkingList, \"yIemFNixyXteqe/8QZDRlJ9pKo8=\");\n\n_c = ParkingList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParkingList\");","map":{"version":3,"sources":["/Users/bbigemoloserr/Documents/counter-app/src/App.js"],"names":["useEffect","useState","ParkingList","currentTime","setCurrentTime","availableParkingCarType","setAvailableParkingCarType","availableParkingId","availableParkingCarTypeVar","fetched","parkingList","setParkingList","endPoint","load","parkingListVar","fetch","then","response","json","fetchedResult","results","map","parking","carType","privateCar","undefined","push","LGV","vacancy","HGV","CV","coach","motorCycle","length","park_Id","console","log","filter","includes","interval","setInterval","clearInterval","index","name","displayAddress","openingHours","weekdays","join","periodStart","periodEnd","excludePublicHoliday","color","hourlyCharges","item","index1","remark","covered","type","price","usageMinimum","monthlyCharges","index2","reserved","dayNightParks","index3","validUntil"],"mappings":"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","sourcesContent":["//Fetch for all car types and all price types\nimport { useEffect, useState } from \"react\"\nimport \"./App.css\"\nexport default function ParkingList() {\n    const [currentTime, setCurrentTime] = useState(0)\n    const [availableParkingCarType, setAvailableParkingCarType] = useState([])\n    let availableParkingId = [], availableParkingCarTypeVar = []\n    let fetched = []\n    const [parkingList, setParkingList] = useState([])\n    const endPoint = \"https://api.data.gov.hk/v1/carpark-info-vacancy\"\n    const load = () => {\n        const parkingListVar = []\n        fetch(endPoint)\n            .then(response => response.json())\n            .then(fetchedResult => {\n                fetched = fetchedResult.results;\n                fetched.map((parking => {\n                    let carType = []\n                    if (parking.privateCar !== undefined && parking.privateCar[0] > 0) {\n                        carType.push(\"Private Car, \")\n                    }\n                    if (parking.LGV !== undefined && parking.LGV[0].vacancy > 0) {\n                        carType.push(\"Light Goods Vehicle, \")\n                    }\n                    if (parking.HGV !== undefined && parking.HGV[0].vacancy > 0) {\n                        carType.push(\"Heavy Goods Vehicle, \")\n                    }\n                    if (parking.CV !== undefined && parking.CV[0].vacancy > 0) {\n                        carType.push(\"Container Vehicle, \")\n                    }\n                    if (parking.coach !== undefined && parking.coach[0].vacancy > 0) {\n                        carType.push(\"Coach, \")\n                    }\n                    if (parking.motorCycle !== undefined && parking.motorCycle[0].vacancy > 0) {\n                        carType.push(\"Motor Cycle, \")\n                    }\n                    if (carType.length > 0) {\n                        availableParkingId.push(parking.park_Id);\n                        availableParkingCarTypeVar.push(carType)\n                    }\n                }))\n                console.log(availableParkingCarTypeVar)\n                fetch(endPoint)\n                    .then(response => response.json())\n                    .then(fetchedResult => {fetchedResult.results.filter((parking) => {\n                        availableParkingId.includes(parking.park_Id) && parkingListVar.push(parking);\n                        setAvailableParkingCarType(availableParkingCarType => availableParkingCarTypeVar)\n        \n                    })\n                    setParkingList(parkingListVar)\n                })\n            })\n    }\n    useEffect(() => {\n        const interval = setInterval(() => setCurrentTime(currentTime => currentTime + 1), 30000)\n        return () => clearInterval(interval);} , [])\n    useEffect(() => {\n        load()\n    }, [currentTime])\n    return (\n        <div>\n            <style>\n            {`table, th, td {border: 1px solid black; border-collapse: collapse;}`}\n            </style>\n            <table>\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Place</th>\n                        <th>Time</th>\n                        <th>Price</th>\n                        <th>Available For</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {parkingList.map((parking, index) => (\n\n                        <tr key={index}>\n                                <th>{parking.park_Id}</th>\n                                <td>{parking.name}</td>\n                                <td>{parking.displayAddress}</td>\n                                <td>{parking.openingHours !== undefined ? `Days: ${parking.openingHours[0].weekdays.join(\",\")} | Period Start: ${parking.openingHours[0].periodStart} | Period End: ${parking.openingHours[0].periodEnd} | Exclude Public Holiday: ${parking.openingHours[0].excludePublicHoliday ? \"Yes\" : \"No\"}` : \"Not specified\"}</td>\n                                <td>\n                                    <span style={{ color: \"red\" }}>Private Car Hourly Charge: </span>\n                                    {(parking.privateCar !== undefined && parking.privateCar.hourlyCharges !== undefined) ?\n                                        parking.privateCar.hourlyCharges.map((item, index1) => (<span key={index1}> <br />Days: {item.weekdays.join(\",\")}| Exclude Public Holiday: {item.excludePublicHoliday ? \"Yes\" : \"No\"} | Remark: {item.remark} | Covered: {item.covered} | Type: {item.type} | Price: {item.price} | Usage Minimum: {item.usageMinimum} | Period Start: {item.periodStart} | Period End: {item.periodEnd}</span>)) : \"Not specified\"}\n                                    <br /><span style={{ color: \"red\" }}>Private Car Monthly Charge: </span>\n                                    {(parking.privateCar !== undefined && parking.privateCar.monthlyCharges !== undefined) ? parking.privateCar.monthlyCharges.map((item, index2) => (<span key={index2}> <br />Reserved: {item.reserved} | Covered: {item.covered} | Type: {item.type} | Price: {item.price} </span>)) : \"Not specified\"}\n                                    <br /><span style={{ color: \"red\" }}>Private Car Day Night Charge: </span>\n                                    {(parking.privateCar !== undefined && parking.privateCar.dayNightParks !== undefined) ? parking.privateCar.dayNightParks.map((item, index3) => (<span key={index3}> <br />Days: {item.weekdays.join(\",\")}| Exclude Public Holiday: {item.excludePublicHoliday ? \"Yes\" : \"No\"} | Remark: {item.remark} | Covered: {item.covered} | Type: {item.type} | Price: {item.price} | Valid Until: {item.validUntil} | Period Start: {item.periodStart} | Period End: {item.periodEnd}</span>)) : \"Not specified\"}\n                                    \n                                    <br/><span style={{ color: \"red\" }}>Light Goods Vehicle Hourly Charge: </span>\n                                    {(parking.LGV !== undefined && parking.LGV.hourlyCharges !== undefined) ?\n                                        parking.LGV.hourlyCharges.map((item, index1) => (<span key={index1}> <br />Days: {item.weekdays.join(\",\")}| Exclude Public Holiday: {item.excludePublicHoliday ? \"Yes\" : \"No\"} | Remark: {item.remark} | Covered: {item.covered} | Type: {item.type} | Price: {item.price} | Usage Minimum: {item.usageMinimum} | Period Start: {item.periodStart} | Period End: {item.periodEnd}</span>)) : \"Not specified\"}\n                                    <br /><span style={{ color: \"red\" }}>Light Goods Vehicle Monthly Charge: </span>\n                                    {(parking.LGV !== undefined && parking.LGV.monthlyCharges !== undefined) ? \n                                    parking.LGV.monthlyCharges.map((item, index2) => (<span key={index2}> <br />Reserved: {item.reserved} | Covered: {item.covered} | Type: {item.type} | Price: {item.price} </span>)) : \"Not specified\"}\n                                    <br /><span style={{ color: \"red\" }}>Light Goods Vehicle Day Night Charge: </span>\n                                    {(parking.LGV !== undefined && parking.LGV.dayNightParks !== undefined) ? \n                                    parking.LGV.dayNightParks.map((item, index3) => (<span key={index3}> <br />Days: {item.weekdays.join(\",\")}| Exclude Public Holiday: {item.excludePublicHoliday ? \"Yes\" : \"No\"} | Remark: {item.remark} | Covered: {item.covered} | Type: {item.type} | Price: {item.price} | Valid Until: {item.validUntil} | Period Start: {item.periodStart} | Period End: {item.periodEnd}</span>)) : \"Not specified\"}\n                                \n                                <br/><span style={{ color: \"red\" }}>Heavy Goods Vehicle Hourly Charge: </span>\n                                    {(parking.HGV !== undefined && parking.HGV.hourlyCharges !== undefined) ?\n                                        parking.HGV.hourlyCharges.map((item, index1) => (<span key={index1}> <br />Days: {item.weekdays.join(\",\")}| Exclude Public Holiday: {item.excludePublicHoliday ? \"Yes\" : \"No\"} | Remark: {item.remark} | Covered: {item.covered} | Type: {item.type} | Price: {item.price} | Usage Minimum: {item.usageMinimum} | Period Start: {item.periodStart} | Period End: {item.periodEnd}</span>)) : \"Not specified\"}\n                                    <br /><span style={{ color: \"red\" }}>Heavy Goods Vehicle Monthly Charge: </span>\n                                    {(parking.HGV !== undefined && parking.HGV.monthlyCharges !== undefined) ? \n                                    parking.HGV.monthlyCharges.map((item, index2) => (<span key={index2}> <br />Reserved: {item.reserved} | Covered: {item.covered} | Type: {item.type} | Price: {item.price} </span>)) : \"Not specified\"}\n                                    <br /><span style={{ color: \"red\" }}>Heavy Goods Vehicle Day Night Charge: </span>\n                                    {(parking.HGV !== undefined && parking.HGV.dayNightParks !== undefined) ? \n                                    parking.HGV.dayNightParks.map((item, index3) => (<span key={index3}> <br />Days: {item.weekdays.join(\",\")}| Exclude Public Holiday: {item.excludePublicHoliday ? \"Yes\" : \"No\"} | Remark: {item.remark} | Covered: {item.covered} | Type: {item.type} | Price: {item.price} | Valid Until: {item.validUntil} | Period Start: {item.periodStart} | Period End: {item.periodEnd}</span>)) : \"Not specified\"}\n                                \n                                <br/><span style={{ color: \"red\" }}>Container Vehicle Hourly Charge: </span>\n                                    {(parking.CV !== undefined && parking.CV.hourlyCharges !== undefined) ?\n                                        parking.CV.hourlyCharges.map((item, index1) => (<span key={index1}> <br />Days: {item.weekdays.join(\",\")}| Exclude Public Holiday: {item.excludePublicHoliday ? \"Yes\" : \"No\"} | Remark: {item.remark} | Covered: {item.covered} | Type: {item.type} | Price: {item.price} | Usage Minimum: {item.usageMinimum} | Period Start: {item.periodStart} | Period End: {item.periodEnd}</span>)) : \"Not specified\"}\n                                    <br /><span style={{ color: \"red\" }}>Container Vehicle Monthly Charge: </span>\n                                    {(parking.CV !== undefined && parking.CV.monthlyCharges !== undefined) ? \n                                    parking.CV.monthlyCharges.map((item, index2) => (<span key={index2}> <br />Reserved: {item.reserved} | Covered: {item.covered} | Type: {item.type} | Price: {item.price} </span>)) : \"Not specified\"}\n                                    <br /><span style={{ color: \"red\" }}>Container Vehicle Day Night Charge: </span>\n                                    {(parking.CV !== undefined && parking.CV.dayNightParks !== undefined) ? \n                                    parking.CV.dayNightParks.map((item, index3) => (<span key={index3}> <br />Days: {item.weekdays.join(\",\")}| Exclude Public Holiday: {item.excludePublicHoliday ? \"Yes\" : \"No\"} | Remark: {item.remark} | Covered: {item.covered} | Type: {item.type} | Price: {item.price} | Valid Until: {item.validUntil} | Period Start: {item.periodStart} | Period End: {item.periodEnd}</span>)) : \"Not specified\"}\n                                \n                                <br/><span style={{ color: \"red\" }}>Coach Hourly Charge: </span>\n                                    {(parking.coach !== undefined && parking.coach.hourlyCharges !== undefined) ?\n                                        parking.coach.hourlyCharges.map((item, index1) => (<span key={index1}> <br />Days: {item.weekdays.join(\",\")}| Exclude Public Holiday: {item.excludePublicHoliday ? \"Yes\" : \"No\"} | Remark: {item.remark} | Covered: {item.covered} | Type: {item.type} | Price: {item.price} | Usage Minimum: {item.usageMinimum} | Period Start: {item.periodStart} | Period End: {item.periodEnd}</span>)) : \"Not specified\"}\n                                    <br /><span style={{ color: \"red\" }}>Coach Monthly Charge: </span>\n                                    {(parking.coach !== undefined && parking.coach.monthlyCharges !== undefined) ? \n                                    parking.coach.monthlyCharges.map((item, index2) => (<span key={index2}> <br />Reserved: {item.reserved} | Covered: {item.covered} | Type: {item.type} | Price: {item.price} </span>)) : \"Not specified\"}\n                                    <br /><span style={{ color: \"red\" }}>Coach Day Night Charge: </span>\n                                    {(parking.coach !== undefined && parking.coach.dayNightParks !== undefined) ? \n                                    parking.coach.dayNightParks.map((item, index3) => (<span key={index3}> <br />Days: {item.weekdays.join(\",\")}| Exclude Public Holiday: {item.excludePublicHoliday ? \"Yes\" : \"No\"} | Remark: {item.remark} | Covered: {item.covered} | Type: {item.type} | Price: {item.price} | Valid Until: {item.validUntil} | Period Start: {item.periodStart} | Period End: {item.periodEnd}</span>)) : \"Not specified\"}\n                                \n                                <br/><span style={{ color: \"red\" }}>Motor Cycle Hourly Charge: </span>\n                                    {(parking.motorCycle !== undefined && parking.motorCycle.hourlyCharges !== undefined) ?\n                                        parking.motorCycle.hourlyCharges.map((item, index1) => (<span key={index1}> <br />Days: {item.weekdays.join(\",\")}| Exclude Public Holiday: {item.excludePublicHoliday ? \"Yes\" : \"No\"} | Remark: {item.remark} | Covered: {item.covered} | Type: {item.type} | Price: {item.price} | Usage Minimum: {item.usageMinimum} | Period Start: {item.periodStart} | Period End: {item.periodEnd}</span>)) : \"Not specified\"}\n                                    <br /><span style={{ color: \"red\" }}>Motor Cycle Monthly Charge: </span>\n                                    {(parking.motorCycle !== undefined && parking.motorCycle.monthlyCharges !== undefined) ? \n                                    parking.motorCycle.monthlyCharges.map((item, index2) => (<span key={index2}> <br />Reserved: {item.reserved} | Covered: {item.covered} | Type: {item.type} | Price: {item.price} </span>)) : \"Not specified\"}\n                                    <br /><span style={{ color: \"red\" }}>Motor Cycle Day Night Charge: </span>\n                                    {(parking.motorCycle !== undefined && parking.motorCycle.dayNightParks !== undefined) ? \n                                    parking.motorCycle.dayNightParks.map((item, index3) => (<span key={index3}> <br />Days: {item.weekdays.join(\",\")}| Exclude Public Holiday: {item.excludePublicHoliday ? \"Yes\" : \"No\"} | Remark: {item.remark} | Covered: {item.covered} | Type: {item.type} | Price: {item.price} | Valid Until: {item.validUntil} | Period Start: {item.periodStart} | Period End: {item.periodEnd}</span>)) : \"Not specified\"}\n                                \n                                </td>\n                                <td>{availableParkingCarType[index]}</td>\n                        </tr>\n\n                    ))}\n                </tbody>\n            </table>\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}