{"ast":null,"code":"var _jsxFileName = \"/Users/bbigemoloserr/Documents/counter-app/src/components/dataFetchingTwo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  loading: true,\n  error: '',\n  post: {}\n}; ///(*)\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_SUCCESS':\n      return {\n        loading: false,\n        post: action.payload,\n        error: ''\n      };\n\n    case 'FETCH_ERROR':\n      return {\n        loading: false,\n        post: {},\n        error: 'Something went wrong'\n      };\n\n    default:\n      return state;\n  }\n};\n\nfunction DataFetchingTwo() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    axios.get('https://l3k2uf0o64.execute-api.ap-southeast-1.amazonaws.com/test/products').then(response => {\n      dispatch({\n        type: 'FETCH_SUCCESS',\n        payload: response.data\n      });\n    }).catch(error => {\n      dispatch({\n        type: 'FETCH_ERROR'\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [state.load ? 'Loading' : state.post.title, state.error ? state.Error : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this) ///bây giờ mấy cái này dã dc initial trong state(*)\n  ;\n}\n\n_s(DataFetchingTwo, \"gZZ3TaNWFnk5pxLxmdKGLDXNo7Y=\");\n\n_c = DataFetchingTwo;\nexport default DataFetchingTwo;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataFetchingTwo\");","map":{"version":3,"sources":["/Users/bbigemoloserr/Documents/counter-app/src/components/dataFetchingTwo.jsx"],"names":["React","useReducer","useEffect","axios","initialState","loading","error","post","reducer","state","action","type","payload","DataFetchingTwo","dispatch","get","then","response","data","catch","load","title","Error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,IADQ;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,IAAI,EAAC;AAHY,CAArB,C,CAKA;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAC9B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,eAAL;AACI,aAAO;AACHN,QAAAA,OAAO,EAAE,KADN;AAEHE,QAAAA,IAAI,EAAEG,MAAM,CAACE,OAFV;AAGHN,QAAAA,KAAK,EAAC;AAHH,OAAP;;AAKJ,SAAK,aAAL;AACI,aAAO;AACHD,QAAAA,OAAO,EAAE,KADN;AAEHE,QAAAA,IAAI,EAAE,EAFH;AAGHD,QAAAA,KAAK,EAAC;AAHH,OAAP;;AAKJ;AACI,aAAOG,KAAP;AAdR;AAgBH,CAjBD;;AAkBA,SAASI,eAAT,GAA2B;AAAA;;AAC3B,QAAM,CAACJ,KAAD,EAAOK,QAAP,IAAmBb,UAAU,CAACO,OAAD,EAAUJ,YAAV,CAAnC;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CACJY,GADD,CACK,2EADL,EAGCC,IAHD,CAGMC,QAAQ,IAAI;AACdH,MAAAA,QAAQ,CAAC;AAACH,QAAAA,IAAI,EAAC,eAAN;AAAuBC,QAAAA,OAAO,EAAEK,QAAQ,CAACC;AAAzC,OAAD,CAAR;AACH,KALD,EAMCC,KAND,CAMOb,KAAK,IAAI;AACZQ,MAAAA,QAAQ,CAAC;AAACH,QAAAA,IAAI,EAAC;AAAN,OAAD,CAAR;AACH,KARD;AAUH,GAXQ,EAWN,EAXM,CAAT;AAaI,sBACI;AAAA,eACKF,KAAK,CAACW,IAAN,GAAY,SAAZ,GAAuBX,KAAK,CAACF,IAAN,CAAWc,KADvC,EAEKZ,KAAK,CAACH,KAAN,GAAaG,KAAK,CAACa,KAAnB,GAA0B,IAF/B;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAKI;AALJ;AAOH;;GAtBQT,e;;KAAAA,e;AAwBT,eAAeA,eAAf","sourcesContent":["import React,{useReducer, useEffect} from 'react'\nimport axios from 'axios'\n\nconst initialState = {\n    loading: true,\n    error: '',\n    post:{}\n}\n///(*)\nconst reducer = (state,action) => {\n    switch(action.type) {\n        case 'FETCH_SUCCESS':\n            return {\n                loading: false,\n                post: action.payload,\n                error:''\n            }\n        case 'FETCH_ERROR':\n            return {\n                loading: false,\n                post: {},\n                error:'Something went wrong'\n            }\n        default:\n            return state\n    }\n}\nfunction DataFetchingTwo() {\nconst [state,dispatch] = useReducer(reducer, initialState)\nuseEffect(() => {\n    axios\n    .get('https://l3k2uf0o64.execute-api.ap-southeast-1.amazonaws.com/test/products')\n    \n    .then(response => {\n        dispatch({type:'FETCH_SUCCESS', payload: response.data})\n    })\n    .catch(error => {\n        dispatch({type:'FETCH_ERROR'})\n    })\n\n}, []);\n\n    return (\n        <div>\n            {state.load? 'Loading': state.post.title }\n            {state.error? state.Error: null}\n        </div>\n        ///bây giờ mấy cái này dã dc initial trong state(*)\n    )\n}\n\nexport default DataFetchingTwo\n"]},"metadata":{},"sourceType":"module"}